@using SqlDataProvider.Data;
@using System.Text;
@model GM.Service.Models.TableModel

@{
    Layout = "~/Views/Shared/_RenderLayout.cshtml";
    TableInfo item = Model.Info;
    List<TableDesignInfo> designs = Model.Designs;
    string name = item.Class.Replace("Info", "");

    StringBuilder sb = new StringBuilder();
    if (designs.Count > 0)
    {
        TableDesignInfo d = designs[0];
        sb.AppendLine(" ");
        sb.AppendLine("public " + name + "Info[] GetSingle" + name + "(" + TableTool.GetDataType(d.Type) + " " + d.Name + ")");
        sb.AppendLine("{");
        sb.AppendLine("    List<" + name + "Info> infos = new List<" + name + "Info>();");
        sb.AppendLine("    SqlDataReader reader = null;");
        sb.AppendLine("    try");
        sb.AppendLine("    {");
        sb.AppendLine("        SqlParameter[] para = new SqlParameter[1];");
        sb.AppendLine("        para[0] = new SqlParameter(\"@" + name + "\", " + name + ");");
        sb.AppendLine("        db.GetReader(ref reader, \"SP_" + item.Name + "_Single\");");
        sb.AppendLine("        while (reader.Read())");
        sb.AppendLine("        {");
        sb.AppendLine("            infos.Add(Init" + name + "(reader));");
        sb.AppendLine("        }");
        sb.AppendLine("    }");
        sb.AppendLine("    catch (Exception e)");
        sb.AppendLine("    {");
        sb.AppendLine("        if (log.IsErrorEnabled)");
        sb.AppendLine("            log.Error(\"GetSigle" + name + "\", e);");
        sb.AppendLine("    }");
        sb.AppendLine("    finally");
        sb.AppendLine("    {");
        sb.AppendLine("        if (reader != null && !reader.IsClosed)");
        sb.AppendLine("            reader.Close();");
        sb.AppendLine("    }");
        sb.AppendLine("    return infos.ToArray();");
        sb.Append("}");

        sb.AppendLine(" ");
        sb.AppendLine("public " + name + "Info GetSigle" + name + "(" + TableTool.GetDataType(d.Type) + " " + d.Name + ")");
        sb.AppendLine("{");
        sb.AppendLine("    SqlDataReader reader = null;");
        sb.AppendLine("    try");
        sb.AppendLine("    {");
        sb.AppendLine("        SqlParameter[] para = new SqlParameter[1];");
        sb.AppendLine("        para[0] = new SqlParameter(\"@" + name + "\", " + name + ");");
        sb.AppendLine("        db.GetReader(ref reader, \"SP_" + item.Name + "_Single\");");
        sb.AppendLine("        while (reader.Read())");
        sb.AppendLine("        {");
        sb.AppendLine("            return Init" + name + "(reader);");
        sb.AppendLine("        }");
        sb.AppendLine("    }");
        sb.AppendLine("    catch (Exception e)");
        sb.AppendLine("    {");
        sb.AppendLine("        if (log.IsErrorEnabled)");
        sb.AppendLine("            log.Error(\"GetSigle" + name + "\", e);");
        sb.AppendLine("    }");
        sb.AppendLine("    finally");
        sb.AppendLine("    {");
        sb.AppendLine("        if (reader != null && !reader.IsClosed)");
        sb.AppendLine("            reader.Close();");
        sb.AppendLine("    }");
        sb.AppendLine("    return null;");
        sb.Append("}");
    }
    else
    {
        sb.Append(StaticFunction.GetTranslation("GM.DDTank.Empty"));
    }
}
<h4>@item.Name <i class="fa fa-angle-right"></i><span class="text-danger"> Bussiness Read Single</span></h4>
<div style="overflow-y:auto; height:450px">
<pre class="line-numbers">
    <code class="language-csharp" id="highlight-code">
        @sb.ToString()
    </code>
</pre>
</div>
@section Scripts{
    <script>
        $(function () {

            navActive('BussinessCRUD');

            var code = $('#highlight-code')[0];
            Prism.highlightElement(code);

            ZeroCopy.init();
        });
    </script>
}