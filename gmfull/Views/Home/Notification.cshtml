@{
    ViewBag.Title = "Metro Notification";
}
<!-- Metro Notification Style -->
<link rel="stylesheet" type="text/css" href="@StaticFunction.Host("gm/Backend/css/MetroNotificationStyle.min.css")">

<!-- Blank Alternative Header -->
<div class="content-header">
    <div class="header-section">
        <h1>
            <i class="gi gi-brush"></i>Notification<br><small>Live notification use SignalR and Metro Notification! Support cross-domain.</small>
        </h1>
    </div>
</div>
<ul class="breadcrumb breadcrumb-top">
    <li>Trang</li>
    <li>Home</li>
    <li><a href="">Notification</a></li>
</ul>
<!-- END Blank Alternative Header -->
<!-- Blank Alternative Content -->
<div class="block block-alt-noborder">
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <textarea id="message" name="message" rows="13" class="ckeditor" placeholder="Content.."></textarea>
                <input type="hidden" id="identityName" />
            </div>
            <div class="form-group text-right">
                <button type="submit" class="btn btn-primary" id="sendmessage"><i class="fa fa-mail-forward"></i> Send</button>
            </div>
        </div>
        <div class="col-md-6 text-right">
            <iframe width="649" height="429" src="https://www.youtube.com/embed/y_8YMxGfl5o" frameborder="0" allowfullscreen></iframe>
        </div>
    </div>
</div>
<!-- END Blank Alternative Content -->
<!-- Content -->
<div class="block block-alt-noborder">
    <h3 class="sub-header">Add follow code inside page<small> you want show notification. </small></h3>
    <!-- HTML -->
    <pre class="line-numbers">
    <code class="language-markup">
                &lt;!-- Font Awesome v4.2. Notice: if your page not show icon you must copy font-awesome to your site and change @StaticFunction.Host("") by your domain name--&gt;
                &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;@StaticFunction.Host("gm/Backend/css/fonts/font-awesome.min.css")&quot;&gt;
                &lt;!-- Metro Notification Style --&gt;
            	&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;@StaticFunction.Host("gm/Backend/css/MetroNotificationStyle.min.css")&quot;&gt;
            	
                &lt;!--The jQuery library 
                &lt;script src=&quot;@StaticFunction.Host("gm/Backend/js/vendor/jquery-1.11.3.min.js")&quot;&gt;&lt;/script&gt;
                --&gt;
                &lt;!--Reference the SignalR library. --&gt;
                &lt;script src=&quot;@StaticFunction.Host("Scripts/jquery.signalR-2.2.0.min.js")&quot;&gt;&lt;/script&gt;
                &lt;!--Reference the autogenerated SignalR hub script. --&gt;
                &lt;script src=&quot;@StaticFunction.Host("signalr/hubs")&quot;&gt;&lt;/script&gt;
    
                &lt;!-- Metro Notification JS --&gt;
                &lt;script src=&quot;@StaticFunction.Host("Scripts/MetroNotification.js")&quot;&gt;&lt;/script&gt;
                &lt;script type=&quot;text/javascript&quot;&gt;
                    $(function () {
                        // Reference the auto-generated proxy for the hub.
                        var chat = $.connection.chatHub;
                        // Create a function that the hub can call back to display messages.
                        chat.client.addNewMessageToPage = function (name, message) {
                            // Add the message to the page use Metro Notification
                            if(message=='shutdown'){
                               window.location.replace("@StaticFunction.Host("maintenance")");
                            }
                            else{
                                $.bigBox({
                                    title: name,//Custom your name here! eg: GM
                                    content: message,
                                    soundpath: '@StaticFunction.Host("gm/Backend/static/sound")'
                                });
                            }
                        };  
                        $.connection.hub.url = "@StaticFunction.Host("signalr")";
                        $.connection.hub.start()
						 .done(function(){ console.log('Now connected, connection ID=' + $.connection.hub.id); })
						 .fail(function(){ console.log('Could not Connect!'); });	         
                    });        
                &lt;/script&gt;
        </code>
    </pre>
    <!-- END HTML -->
</div>
<!-- END Content -->

@section scripts {
    <!-- ckeditor.js, load it only in the page you would like to use CKEditor (it's a heavy plugin to include it with the others!) -->
    <script src="@StaticFunction.Host("gm/Backend/js/helpers/ckeditor/ckeditor.js")"></script>
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="@StaticFunction.Host("Scripts/jquery.signalR-2.2.0.min.js")"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="@StaticFunction.Host("signalr/hubs")"></script>

    <!-- Metro Notification JS -->
    <script src="@StaticFunction.Host("Scripts/MetroNotification.js")"></script>
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $.bigBox({
                    title: name, // Custom your name here! eg: GM
                    content: message,
                    soundpath: '@StaticFunction.Host("gm/Backend/static/sound")'
                });
            };

            // Get the user name and store it to prepend to messages
            $('#identityName').val('@User.Identity.Name');
            // Set initial focus to message input box.

            // Start the connection.
            $.connection.hub.start()
                .done(function () {
                    console.log('Now connected, connection ID=' + $.connection.hub.id);

                    $('#sendmessage').click(function () {
                        // Call the Send method on the hub.
                        var name = $('#identityName').val();
                        console.log('name=' + name);
                        var message = CKEDITOR.instances.message.getData();
                        if (message !== "") {
                            chat.server.send('@StaticFunction.CryptoToken(User.Identity.Name)', name, message);
                        }
                    });
                    /*END*/
                })
            .fail(function () { console.log('Could not Connect!'); });
        });
    </script>
}