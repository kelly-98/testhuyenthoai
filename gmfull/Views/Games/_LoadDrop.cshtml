@using MvcPaging;
@model IPagedList<SqlDataProvider.Data.DropCondiction>
@{
    Layout = "~/Views/Shared/_RenderLayout.cshtml";
    ViewBag.Title = "LoadDrop";
}

@if (Model.Count() > 0)
{
    <ul class="media-list" id="media-list" style="min-height:532px">
        @foreach (var item in Model)
        {
            <li class="media">
                <div class="media-body">
                    <span class="text-warning pull-right"><small><em>drop id <i class="gi gi-chevron-right" style="font-size:8px"></i>@item.DropId</em></small></span>
                    <a href="@Html.Raw(Url.Action("LoadDropItems","Games", new { id = item.DropId }))" id="@item.DropId">
                        @if (item.Para2 == ",1,")
                        { <strong>Drop @item.DropId Lật Được</strong> }
                        else
                        { <strong>Drop @item.DropId Hiển Thị</strong>}
                    </a>
                    <div>
                        @if (string.IsNullOrEmpty(item.Detail))
                        { <span class="text-muted"> Đang cập nhật </span> }
                        else
                        { <span>@item.Detail </span> }
                    </div>
                    <span class="btn-group">
                        <a href="@Html.Raw(Url.Action("EditDropCondiction","Games", new { id = item.DropId, page =  Model.PageNumber}))" class="btn btn-xs btn-success"
                           data-toggle="tooltip" title="Sửa" data-modal="editDrop"><i class="fa fa-pencil"></i></a>
                        <a href="@Html.Raw(Url.Action("DeleteDropCondiction","Games", new { id = item.DropId }))" class="btn btn-xs btn-warning"
                           data-toggle="tooltip" title="Xóa" data-modal="deleteDrop"><i class="fa fa-times"></i></a>
                    </span>
                </div>
            </li>
        }
    </ul>
    <div class="text-center">
        <!--UpdateTargetId = "drop-content",-->
        @Html.Pager(Model.PageSize, Model.PageNumber, Model.TotalItemCount, new AjaxOptions { LoadingElementId = "loading-bgr", OnSuccess = "AjaxSuccess" }).Options(o => o
                                .DisplayTemplate("_Pagination")
                                .Action("LoadDrop")
                                .AddRouteValue("key", ViewData["key"])
                                .MaxNrOfPages(3))
    </div>
}
else
{
    <div class="text-center">
        @Html.Raw(StaticFunction.GetTranslation("Views.Empty"))
    </div>
}

@section Scripts{
    <script>
        $(function () {
            /* page load*/
            loadDropItems();

            ModelGeneral.init('data-modal="editDrop"');
            ModelGeneral.init('data-modal="deleteDrop"');

            $(".media-list").on("click", "li a", function () {
                $(".media-list li a").removeClass('active text-danger');
                $(this).addClass('active text-danger');
                loadDropItems();
                return false;
            });
        });

        function loadDrop() {
			var quickSearchBox = $("#quick-search-drop").val();
			var expandedQuery = quickSearchBox ? ('&key=' + encodeURI(quickSearchBox)) : '';
            GMApp.GetJson('#drop-content', '@Html.Raw(Url.Action("LoadDrop","Games"))?page=@Model.PageNumber' + expandedQuery);
        }
        function loadDropItems(page) {
            var curentAvtive = $(".media-list").find('.active');
            if (curentAvtive.length == 0) {
                curentAvtive = $(".media-list li:first a");
                curentAvtive.addClass('active text-danger');
            }
            if (curentAvtive.length > 0) {
                var name = curentAvtive.html();
                var link = curentAvtive.attr("href");
                if (page != undefined)
                {
                    link += '?page=' + page;
                }
                var id = curentAvtive.attr("id");
                $("#loading-bgr").show();
                $.get(link, function (data) {
                    $("#drop-items-content").html(data.Html);
                    $("#drop-items-header").html(name);
                    $("#btn-add-drop-items").attr("data-dialog", id);
                    $("#loading-bgr").hide();
                })
                .fail(function (data) {
                    $("#drop-items-content").html(getError(data.status, data.statusText));
                    $("#loading-bgr").hide();
                });
            }
            else {
                $("#drop-items-content").html('<div class="text-center">@Html.Raw(StaticFunction.GetTranslation("Views.Empty"))</div>');
                $("#drop-items-header").html('Chưa chọn');
            }
        }

        function AjaxSuccess(data) {//OnSuccess = "AjaxSuccess"
            if (data.Result) {
                $('#drop-content').html(data.Html);
            }
            else {
                showGrowl(data.Html, 'danger');
            }
        }

        function AjaxFailure(xhr) {//OnFailure = "AjaxFailure"
            var text = "Error: " + xhr.status + " " + xhr.statusText;
            showGrowl(text, 'danger');
        }
    </script>
}

